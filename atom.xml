<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gaomaoqi.github.io</id>
    <title>GMQ&apos;s blog</title>
    <updated>2021-02-16T08:38:46.638Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gaomaoqi.github.io"/>
    <link rel="self" href="https://gaomaoqi.github.io/atom.xml"/>
    <subtitle>结庐在信竞，而无大佬喧。</subtitle>
    <logo>https://gaomaoqi.github.io/images/avatar.png</logo>
    <icon>https://gaomaoqi.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, GMQ&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[CSP 2020 试卷及参考答案]]></title>
        <id>https://gaomaoqi.github.io/post/csp-2020-shi-juan-ji-can-kao-da-an/</id>
        <link href="https://gaomaoqi.github.io/post/csp-2020-shi-juan-ji-can-kao-da-an/">
        </link>
        <updated>2020-10-11T13:40:53.000Z</updated>
        <content type="html"><![CDATA[<h1 id="csp-2020-试卷及参考答案">CSP 2020 试卷及参考答案</h1>
<h2 id="csp-j-a卷试题">CSP-J A卷试题</h2>
<figure data-type="image" tabindex="1"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJlB2B5n7q9vyFFeFJhyPAEvEZvN37DhGukePQYwOkuHz0NzGOjqwcWw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJexPPMuK6Omibq76MGiacDGRjIzbVk9Ee4DsglUBVwlDKQ9b7Y0CmhX3Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJCfTJ1ChGpbWWTDXLCsqmbmlAZZA88OYGpe1fATrzMuoHt2cZcnwWkg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJ1qmsWeNMhYClqpJiaUJoC1ibib5p8KNianM0TNEAGBwC6yu3NFcHhLbhWw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJy3Dbt5qfU36Kic9HvgtOqbuH9R8Ru4icbXQrRjibibNoppNVWO3DZ9qpog/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJicWnKjs94uBFEatcicz8z3fSXgyBOzZj3PqoB2oaKpHQc0k3YABK8YHw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJa5sf6vRY5ur8ic6gjAmhumSoiaMtebH5AEMAM8A1VFRjHH55rsYbfBdg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJYLQKzqe9GBoYica8SBCx9EBDojoiazZwIwUfOfgiaKicglVA7AdUMXaMhQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJ4qZj45dXFAO1hpLnJ7uEGgn6efgIVLgQD2pxfqTsibGWiavMpnsUzwAw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJoPlribLyFUaDSXRvDKib7BYtT954aQ3c5vHYN5evVfRSqnFfMF6zVnFw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<h2 id="csp-j-a卷参考答案">CSP-J A卷参考答案</h2>
<ul>
<li>
<p><strong>单项选择</strong></p>
<p>AADCC BAAAA ADCAA</p>
</li>
<li>
<p><strong>阅读程序</strong></p>
<p>1）√ × √ × A D</p>
<p>2）× × √ D B D</p>
<p>3）× √ × B C C</p>
</li>
<li>
<p><strong>完善程序</strong></p>
<p>CCCAC BDAAB</p>
</li>
</ul>
<p>图片版：</p>
<figure data-type="image" tabindex="11"><img src="https://s1.ax1x.com/2020/10/11/0gcAF1.png" alt="0gcAF1.png" loading="lazy"></figure>
<h2 id="csp-s-a卷试题">CSP-S A卷试题</h2>
<figure data-type="image" tabindex="12"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJTVvib75JzYhiaibb4v9WBOu15Fq87jUt6VaEnFzvExSzpRo03z9lZwsfg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="13"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJB5O99iaiaXTicISRVjFOofc2elE7hficMBSv4NJoEfR6uDic8ZJwSvTQFxg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJQ1nOpkHGiaLl33NXHvHuGhKBep5wsbNdmcm7YSIcV349qgqlfWunRMg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="15"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJcZ978xRzibtxcLsz00wnKP0Bat197fE73VZP9fGRqiaPvBUBNNrxUNBg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="16"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJRWZ659fj4eUYpKQkqudRFy0sU0SttOARblBFIRXhYmbZ3iagDOA3UMw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="17"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJuN9rL9VT0KdZyJHhUWpoYHia2xs9I1uAfGJes92ibeJoa03NiaZpU634A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="18"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJoY0VMJ3s6nVlblIGTz2UQUIVRuOrU72cZdSNIbOsfCl8EEGDxoia5iaQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="19"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJj4iceNyjPAicDgtp9XvD7cpxOX6Vf3OHddfeoOoF7QpGpibicqbI9s1btQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="20"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJVbe1sSxXvrRwmXukiaVIic0OZhJtVXGiaUUVzWiaeD5icm8NdZEpHrziaxow/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="21"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJqEKCr0DoDdGvGjHvyCibnsQjzhJAaTYqzP8fqJ3SaPbzUz30c2b2A7Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="22"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJGZoIf2zcPdNrKH8dZ1Npb86Xe8XIbeicAIbfK8eHJ77G6Hrx9v5UHIQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="23"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJXeS9sSoLjEjCMSNRMPiaDPibKicPFKicne6KxxA9QtNhibNtZmrLU9I1x1g/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="24"><img src="https://mmbiz.qpic.cn/mmbiz_png/iay99t32l6qeXoJcV4WoTsibnGddL6VkbJhiadeQqPfrKUacImdfCMGEQm6Fwo5FpmticLBnL1y4LrDibc5N8GOoenw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img" loading="lazy"></figure>
<h2 id="csp-s-a卷参考答案">CSP-S A卷参考答案</h2>
<ul>
<li>
<p><strong>单项选择</strong></p>
<p>CBBBD BAACC CDBDC</p>
</li>
<li>
<p><strong>阅读程序</strong></p>
<p>1.× × √ √ C C</p>
<p>2.× √ （争议）B A D</p>
<p>3.√ × × D D C</p>
</li>
<li>
<p><strong>完善程序</strong></p>
<p>DBDDB DBCAB</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数学几何压轴题选]]></title>
        <id>https://gaomaoqi.github.io/post/jhyzt-1/</id>
        <link href="https://gaomaoqi.github.io/post/jhyzt-1/">
        </link>
        <updated>2020-10-01T12:30:00.000Z</updated>
        <content type="html"><![CDATA[<p>1.如图所示，平行四边形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">ABCD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 和平行四边形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>D</mi><mi>E</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CDEF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 有公共边 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">CD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>，边 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">AB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">EF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 在同一条直线上，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi><mi mathvariant="normal">⊥</mi><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">AC⊥CD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">⊥</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi><mo>=</mo><mi>A</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">AC=AF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，过点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>H</mi><mi mathvariant="normal">⊥</mi><mi>B</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">AH⊥BC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord">⊥</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 交 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 于点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>，交 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">BC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 于点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>，连接 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>G</mi></mrow><annotation encoding="application/x-tex">EG</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">G</span></span></span></span>．<br>
<img src="https://s1.ax1x.com/2020/10/01/0MfBq0.png" alt="0MfBq0.png" loading="lazy"></p>
<p>（1）若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>E</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">AE=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>D</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">CD=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mi>B</mi><mi>C</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">△BCF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 的面积为（     ）；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mi>B</mi><mi>C</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">△BCF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>的周长为（     ）；</p>
<p>（2）求证：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>C</mi><mo>=</mo><mi>A</mi><mi>G</mi><mo>+</mo><mi>E</mi><mi>G</mi></mrow><annotation encoding="application/x-tex">BC=AG+EG</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">G</span></span></span></span>．</p>
<hr>
<p>2.如图，在菱形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">ABCD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∠</mi><mi>A</mi><mi mathvariant="normal">＝</mi><mn>60</mn><mi mathvariant="normal">°</mi></mrow><annotation encoding="application/x-tex">∠A＝60°</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∠</span><span class="mord mathdefault">A</span><span class="mord cjk_fallback">＝</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 为菱形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">ABCD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 内对角线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">BD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 左侧一点，连接 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">BE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">CE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">DE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>．</p>
<p>（1）若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mi mathvariant="normal">＝</mi><mn>6</mn></mrow><annotation encoding="application/x-tex">AB＝6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">＝</span><span class="mord">6</span></span></span></span>，求菱形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">ABCD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 的面积；</p>
<p>（2）若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∠</mi><mi>B</mi><mi>E</mi><mi>D</mi><mi mathvariant="normal">＝</mi><mn>2</mn><mi mathvariant="normal">∠</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">∠BED＝2∠A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord">∠</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">＝</span><span class="mord">2</span><span class="mord">∠</span><span class="mord mathdefault">A</span></span></span></span>，求证：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>E</mi><mi mathvariant="normal">＝</mi><mi>B</mi><mi>E</mi><mo>+</mo><mi>D</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">CE＝BE+DE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord cjk_fallback">＝</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>．<br>
<img src="https://s1.ax1x.com/2020/10/01/0MfyIU.png" alt="0MfyIU.png" loading="lazy"></p>
<hr>
<p>3.如图，在等边 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mi>A</mi><mi>B</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">△ABC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>D</mi><mi mathvariant="normal">＝</mi><mi>C</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">BD＝CE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">＝</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>，连接<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">AD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">BE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 交于点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>．</p>
<p>（1）求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∠</mi><mi>A</mi><mi>F</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">∠AFE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord">∠</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> 的度数；</p>
<p>（2）求证：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi><mi mathvariant="normal">•</mi><mi>D</mi><mi>F</mi><mi mathvariant="normal">＝</mi><mi>B</mi><mi>D</mi><mi mathvariant="normal">•</mi><mi>B</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">AC•DF＝BD•BF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">•</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">＝</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">•</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>；</p>
<p>（3）连接 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">FC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>，若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>F</mi><mi mathvariant="normal">⊥</mi><mi>A</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">CF⊥AD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">⊥</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> ，求证：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>D</mi><mi mathvariant="normal">＝</mi><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>D</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">BD＝\dfrac{1}{2}DC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">＝</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>．<br>
<img src="https://s1.ax1x.com/2020/10/01/0MfgG4.png" alt="0MfgG4.png" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LCA及其算法总结]]></title>
        <id>https://gaomaoqi.github.io/post/lca-suan-fa/</id>
        <link href="https://gaomaoqi.github.io/post/lca-suan-fa/">
        </link>
        <updated>2020-04-19T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>GMQ出品，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法总结</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>GMQ出品，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法总结</strong></p>
<!-- more -->
<h1 id="目录">目录</h1>
<ul>
<li>一、前言</li>
<li>二、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题概述
<ul>
<li>（一）什么是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题？</li>
<li>（二） <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题的主要应用</li>
<li>（三）常用求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法</li>
</ul>
</li>
<li>三、求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 的算法详解
<ul>
<li>（一）在线LCA的算法（爬树法）</li>
</ul>
</li>
</ul>
<h1 id="一-前言">一、前言</h1>
<p>这是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span>，可不是 <a href="https://loj.ac/user/8">liu_cheng_ao</a> ，也不是 <a href="https://baike.baidu.com/item/LCA%E6%88%98%E6%96%97%E6%9C%BA/9899390?fr=aladdin">印度某不靠谱工程</a> 哟</p>
<h1 id="二-lca-问题概述">二、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题概述</h1>
<h2 id="一什么是-lca-问题">（一）什么是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题？</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>o</mi><mi>n</mi><mi>A</mi><mi>n</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Lowest Common Ancestor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">A</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>基于有根树最近公共祖先问题。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi><mo>(</mo><mi>T</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">LCA(T,u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>：给定一棵有根树 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> 和两个结点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>，找到距离 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 的最近的共同祖先结点，称为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题。</p>
<p>比如这张图：</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/04/19/JKx2qJ.png" alt="JKx2qJ.png" loading="lazy"></figure>
<p>对于该有根树 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>，满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>L</mi><mi>C</mi><mi>A</mi><mo>(</mo><mi>T</mi><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>2</mn><mo>)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>L</mi><mi>C</mi><mi>A</mi><mo>(</mo><mi>T</mi><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo>)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>L</mi><mi>C</mi><mi>A</mi><mo>(</mo><mi>T</mi><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo>)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}LCA(T,5,2)=1\\LCA(T,3,4)=3\\LCA(T,4,5)=3\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h2 id="二-lca-问题的主要应用">（二） <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 问题的主要应用</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 用于求解两个点在这棵树上距离最近的公共祖先节点。</p>
<p>所以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 主要是用来求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Red"><mi mathvariant="normal">当</mi><mi mathvariant="normal">两</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">仅</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">唯</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">最</mi><mi mathvariant="normal">短</mi><mi mathvariant="normal">路</mi><mi mathvariant="normal">径</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">路</mi><mi mathvariant="normal">径</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Red}当两个点仅有唯一一条确定的最短路径时的路径}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord"><span class="mord cjk_fallback" style="color:Red;">当</span><span class="mord cjk_fallback" style="color:Red;">两</span><span class="mord cjk_fallback" style="color:Red;">个</span><span class="mord cjk_fallback" style="color:Red;">点</span><span class="mord cjk_fallback" style="color:Red;">仅</span><span class="mord cjk_fallback" style="color:Red;">有</span><span class="mord cjk_fallback" style="color:Red;">唯</span><span class="mord cjk_fallback" style="color:Red;">一</span><span class="mord cjk_fallback" style="color:Red;">一</span><span class="mord cjk_fallback" style="color:Red;">条</span><span class="mord cjk_fallback" style="color:Red;">确</span><span class="mord cjk_fallback" style="color:Red;">定</span><span class="mord cjk_fallback" style="color:Red;">的</span><span class="mord cjk_fallback" style="color:Red;">最</span><span class="mord cjk_fallback" style="color:Red;">短</span><span class="mord cjk_fallback" style="color:Red;">路</span><span class="mord cjk_fallback" style="color:Red;">径</span><span class="mord cjk_fallback" style="color:Red;">时</span><span class="mord cjk_fallback" style="color:Red;">的</span><span class="mord cjk_fallback" style="color:Red;">路</span><span class="mord cjk_fallback" style="color:Red;">径</span></span></span></span></span>这一类问题。</p>
<h2 id="三常用求-lca-算法">（三）常用求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法</h2>
<ul>
<li><strong>【在线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法】</strong>：类 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">ST</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> 算法，又称爬树法</li>
<li><strong>【离线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 算法】</strong>： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>j</mi><mi>a</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Tarjan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span></span></span></span> 算法</li>
<li><strong>【<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 向 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">RMQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">Q</span></span></span></span> 的转化】</strong>：利用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>F</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">DFS</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> 将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">LCA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span></span> 转化为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">RMQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">Q</span></span></span></span> 问题</li>
</ul>
<h1 id="未完待续~~qaq">未完待续~~QAQ</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSP-J 2019 初赛与复赛 游记]]></title>
        <id>https://gaomaoqi.github.io/post/csp-j-2019-chu-sai-yu-fu-sai-you-ji/</id>
        <link href="https://gaomaoqi.github.io/post/csp-j-2019-chu-sai-yu-fu-sai-you-ji/">
        </link>
        <updated>2020-04-13T12:36:46.000Z</updated>
        <summary type="html"><![CDATA[<p>2019年，第一届CSP-J/S比赛拉开序幕，虽然外界猜测该比赛是CCF为逃避教育部“零收费”的限制而举行的，但还是有许多的OIer参加了这个比赛，我便是其中一员……</p>
]]></summary>
        <content type="html"><![CDATA[<p>2019年，第一届CSP-J/S比赛拉开序幕，虽然外界猜测该比赛是CCF为逃避教育部“零收费”的限制而举行的，但还是有许多的OIer参加了这个比赛，我便是其中一员……</p>
<!-- more -->
<h1 id="初赛">初赛</h1>
<h2 id="2020911初赛的一个月前"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2020.9.11</mn></mrow><annotation encoding="application/x-tex">2020.9.11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span></span></span></span>，初赛的一个月前</h2>
<p>这是本学期第一堂在机房的普通信息技术课</p>
<p>踏着上课铃，我们走进了机房，只见极域电子教室在屏幕上闪着光</p>
<p>不用说，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Did</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 打开了广播，还好不是全屏</p>
<p>于是我们就看着 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Did</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 飞快地在浏览器的网址栏输入了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Black"><menclose mathbackground="Green"><mtext>rg.noi.cn</mtext></menclose></mstyle></mrow><annotation encoding="application/x-tex">{\color{Black}\colorbox{Green}{rg.noi.cn}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4623em;vertical-align:-0.49444em;"></span><span class="mord"><span class="mord" style="color:Black;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9678599999999999em;"><span style="top:-2.96786em;"><span class="pstrut" style="height:3.4623em;"></span><span class="stretchy colorbox" style="color:Black;height:1.4623em;background-color:Green;"></span></span><span style="top:-3.4623em;"><span class="pstrut" style="height:3.4623em;"></span><span class="mord boxpad" style="color:Black;"><span class="mord" style="color:Black;">r</span><span class="mord" style="color:Black;">g</span><span class="mord" style="color:Black;">.</span><span class="mord" style="color:Black;">n</span><span class="mord" style="color:Black;">o</span><span class="mord" style="color:Black;">i</span><span class="mord" style="color:Black;">.</span><span class="mord" style="color:Black;">c</span><span class="mord" style="color:Black;">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49444em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>毕竟当时对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mi>I</mi></mrow><annotation encoding="application/x-tex">OI</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span> 界了解不多，只知道逝去的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>O</mi><mi>I</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">NOIP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span></p>
<p>然后看见 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">CSP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的第一反应是：啥玩意？雨藕无瓜！</p>
<p>结果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Did</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span> 轻描淡写地说：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Black"><menclose mathbackground="Skyblue"><mrow><mtext>“这个比赛是入门的，C++学过的同学都可以参加，想报名的下节课带照片来</mtext><mo>…</mo><mo>…</mo><mtext>”</mtext></mrow></menclose></mstyle></mrow><annotation encoding="application/x-tex">{\color{Black}\colorbox{Skyblue}{“这个比赛是入门的，C++学过的同学都可以参加，想报名的下节课带照片来……”}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.37777em;vertical-align:-0.38333em;"></span><span class="mord"><span class="mord" style="color:Black;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.99444em;"><span style="top:-2.99444em;"><span class="pstrut" style="height:3.37777em;"></span><span class="stretchy colorbox" style="color:Black;height:1.37777em;background-color:Skyblue;"></span></span><span style="top:-3.37777em;"><span class="pstrut" style="height:3.37777em;"></span><span class="mord boxpad" style="color:Black;"><span class="mord" style="color:Black;">“</span><span class="mord cjk_fallback" style="color:Black;">这</span><span class="mord cjk_fallback" style="color:Black;">个</span><span class="mord cjk_fallback" style="color:Black;">比</span><span class="mord cjk_fallback" style="color:Black;">赛</span><span class="mord cjk_fallback" style="color:Black;">是</span><span class="mord cjk_fallback" style="color:Black;">入</span><span class="mord cjk_fallback" style="color:Black;">门</span><span class="mord cjk_fallback" style="color:Black;">的</span><span class="mord cjk_fallback" style="color:Black;">，</span><span class="mord" style="color:Black;">C</span><span class="mord" style="color:Black;">+</span><span class="mord" style="color:Black;">+</span><span class="mord cjk_fallback" style="color:Black;">学</span><span class="mord cjk_fallback" style="color:Black;">过</span><span class="mord cjk_fallback" style="color:Black;">的</span><span class="mord cjk_fallback" style="color:Black;">同</span><span class="mord cjk_fallback" style="color:Black;">学</span><span class="mord cjk_fallback" style="color:Black;">都</span><span class="mord cjk_fallback" style="color:Black;">可</span><span class="mord cjk_fallback" style="color:Black;">以</span><span class="mord cjk_fallback" style="color:Black;">参</span><span class="mord cjk_fallback" style="color:Black;">加</span><span class="mord cjk_fallback" style="color:Black;">，</span><span class="mord cjk_fallback" style="color:Black;">想</span><span class="mord cjk_fallback" style="color:Black;">报</span><span class="mord cjk_fallback" style="color:Black;">名</span><span class="mord cjk_fallback" style="color:Black;">的</span><span class="mord cjk_fallback" style="color:Black;">下</span><span class="mord cjk_fallback" style="color:Black;">节</span><span class="mord cjk_fallback" style="color:Black;">课</span><span class="mord cjk_fallback" style="color:Black;">带</span><span class="mord cjk_fallback" style="color:Black;">照</span><span class="mord cjk_fallback" style="color:Black;">片</span><span class="mord cjk_fallback" style="color:Black;">来</span><span class="mspace" style="color:Black;margin-right:0.16666666666666666em;"></span><span class="minner" style="color:Black;">…</span><span class="mspace" style="color:Black;margin-right:0.16666666666666666em;"></span><span class="minner" style="color:Black;">…</span><span class="mspace" style="color:Black;margin-right:0.16666666666666666em;"></span><span class="mord" style="color:Black;">”</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.38333em;"><span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi>o</mi><mi>w</mi><mo>!</mo></mrow><annotation encoding="application/x-tex">Wow!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">!</span></span></span></span></p>
<p>结果后来的第一节信竞课，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mi>z</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">jzp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">p</span></span></span></span> 老师也讲到了这件事</p>
<p>于是周末就在家里报了名，缴了费</p>
<p><s>CCF​不愧是吞钱机器</s></p>
<p>然后听 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mi>z</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">jzp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">p</span></span></span></span> 老师说，重庆初赛很水，不怎么复习都能过</p>
<h2 id="20201011初赛的一周前"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2020.10.11</mn></mrow><annotation encoding="application/x-tex">2020.10.11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span></span></span></span>，初赛的一周前</h2>
<p>我打印了初赛模拟卷子在家做了一番，自我感觉不错</p>
<p>后来的一个中午，和我关系不错的信竞大佬 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>B</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">GBF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 给了我一张他关于树和图的学习笔记，我感觉勉强能记住，但其中的含义就一知半解</p>
<h2 id="20201019初赛十分钟前"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2020.10.19</mn></mrow><annotation encoding="application/x-tex">2020.10.19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">9</span></span></span></span>，初赛十分钟前</h2>
<p>我哼哧哼哧地跨上三教楼前的台阶，到了最近的教室门口看这个考场的考生名单，我的名字赫赫在目，忐忑地跨进考场，一眼看见BS中学信竞的最高教练 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>X</mi><mi>J</mi></mrow><annotation encoding="application/x-tex">HXJ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span> 老师坐在讲台上，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>B</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">GBF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 坐在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>X</mi><mi>J</mi></mrow><annotation encoding="application/x-tex">HXJ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span> 老师正前方的课桌前，面前铺满了复习资料</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>B</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">GBF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> 看见我来了，冲我使劲招手，等我走过去，他一把把我拉到他旁边，塞给我一份复习资料，指着他身后的座位说：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Black"><menclose mathbackground="Skyblue"><mtext>“你的位置在这，快复习！”</mtext></menclose></mstyle></mrow><annotation encoding="application/x-tex">{\color{Black}\colorbox{Skyblue}{“你的位置在这，快复习！”}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2944399999999998em;vertical-align:-0.3em;"></span><span class="mord"><span class="mord" style="color:Black;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9944399999999998em;"><span style="top:-2.99444em;"><span class="pstrut" style="height:3.29444em;"></span><span class="stretchy colorbox" style="color:Black;height:1.2944399999999998em;background-color:Skyblue;"></span></span><span style="top:-3.29444em;"><span class="pstrut" style="height:3.29444em;"></span><span class="mord boxpad" style="color:Black;"><span class="mord" style="color:Black;">“</span><span class="mord cjk_fallback" style="color:Black;">你</span><span class="mord cjk_fallback" style="color:Black;">的</span><span class="mord cjk_fallback" style="color:Black;">位</span><span class="mord cjk_fallback" style="color:Black;">置</span><span class="mord cjk_fallback" style="color:Black;">在</span><span class="mord cjk_fallback" style="color:Black;">这</span><span class="mord cjk_fallback" style="color:Black;">，</span><span class="mord cjk_fallback" style="color:Black;">快</span><span class="mord cjk_fallback" style="color:Black;">复</span><span class="mord cjk_fallback" style="color:Black;">习</span><span class="mord cjk_fallback" style="color:Black;">！</span><span class="mord" style="color:Black;">”</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>当时也是很紧张，感觉考场一片寂静，慌乱间看了几页电脑的硬件知识就放下了资料，正好听见 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>X</mi><mi>J</mi></mrow><annotation encoding="application/x-tex">HXJ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span> 老师说：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="Black"><menclose mathbackground="Skyblue"><mtext>“同学们，资料放到书包里，我们马上就要开考了。”</mtext></menclose></mstyle></mrow><annotation encoding="application/x-tex">{\color{Black}\colorbox{Skyblue}{“同学们，资料放到书包里，我们马上就要开考了。”}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2944399999999998em;vertical-align:-0.3em;"></span><span class="mord"><span class="mord" style="color:Black;"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9944399999999998em;"><span style="top:-2.99444em;"><span class="pstrut" style="height:3.29444em;"></span><span class="stretchy colorbox" style="color:Black;height:1.2944399999999998em;background-color:Skyblue;"></span></span><span style="top:-3.29444em;"><span class="pstrut" style="height:3.29444em;"></span><span class="mord boxpad" style="color:Black;"><span class="mord" style="color:Black;">“</span><span class="mord cjk_fallback" style="color:Black;">同</span><span class="mord cjk_fallback" style="color:Black;">学</span><span class="mord cjk_fallback" style="color:Black;">们</span><span class="mord cjk_fallback" style="color:Black;">，</span><span class="mord cjk_fallback" style="color:Black;">资</span><span class="mord cjk_fallback" style="color:Black;">料</span><span class="mord cjk_fallback" style="color:Black;">放</span><span class="mord cjk_fallback" style="color:Black;">到</span><span class="mord cjk_fallback" style="color:Black;">书</span><span class="mord cjk_fallback" style="color:Black;">包</span><span class="mord cjk_fallback" style="color:Black;">里</span><span class="mord cjk_fallback" style="color:Black;">，</span><span class="mord cjk_fallback" style="color:Black;">我</span><span class="mord cjk_fallback" style="color:Black;">们</span><span class="mord cjk_fallback" style="color:Black;">马</span><span class="mord cjk_fallback" style="color:Black;">上</span><span class="mord cjk_fallback" style="color:Black;">就</span><span class="mord cjk_fallback" style="color:Black;">要</span><span class="mord cjk_fallback" style="color:Black;">开</span><span class="mord cjk_fallback" style="color:Black;">考</span><span class="mord cjk_fallback" style="color:Black;">了</span><span class="mord cjk_fallback" style="color:Black;">。</span><span class="mord" style="color:Black;">”</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>趁出考场放书包的机会去了一趟卫生间，等我回来，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>X</mi><mi>J</mi></mrow><annotation encoding="application/x-tex">HXJ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span> 老师已经拿出了试卷，准备分发</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DP算法集合]]></title>
        <id>https://gaomaoqi.github.io/post/dp-zongjie/</id>
        <link href="https://gaomaoqi.github.io/post/dp-zongjie/">
        </link>
        <updated>2020-04-13T10:31:30.000Z</updated>
        <content type="html"><![CDATA[<h1 id="github-blog">GitHub Blog</h1>
<ul>
<li><a href="https://gaomaoqi.xyz/post/dp-suan-fa-part0-dp-ru-men-si-xiang/">part_0 入门思想</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【DP算法】Part0 - DP入门思想]]></title>
        <id>https://gaomaoqi.github.io/post/dp-suan-fa-part0-dp-ru-men-si-xiang/</id>
        <link href="https://gaomaoqi.github.io/post/dp-suan-fa-part0-dp-ru-men-si-xiang/">
        </link>
        <updated>2020-04-13T10:24:59.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="part0-dp入门思想"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>a</mi><mi>r</mi><mi>t</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">Part0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mord">0</span></span></span></span> —— DP入门思想</h1>
<p>首先，我们来一道极其水沝淼㵘的入门思考题：</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="part0-dp入门思想"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>a</mi><mi>r</mi><mi>t</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">Part0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mord">0</span></span></span></span> —— DP入门思想</h1>
<p>首先，我们来一道极其水沝淼㵘的入门思考题：</p>
<!-- more -->
<pre><code>【题目简述】给出你一个地图，地图中每个顶点代表一个城市，两个城市间的连线代表道路，连线上的数值代表道路的长度。现在，想从城市A到达城市D，怎样走路程最短，最短路程的长度是多少？
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/04/10/GTv0v4.png" alt="你看到这行字的时候，就可以退出了！" loading="lazy"></figure>
<p>看完题后，我们发现这里共有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> 条路径：</p>
<table>
<thead>
<tr>
<th>路径</th>
<th>A→B1→C1→D</th>
<th>A→B1→C2→D</th>
<th>A→B2→C2→D</th>
<th>A→B2→C3→D</th>
</tr>
</thead>
<tbody>
<tr>
<td>长度</td>
<td>5+3+4=12</td>
<td>5+2+3=10</td>
<td>2+7+3=12</td>
<td>2+4+5=11</td>
</tr>
</tbody>
</table>
<p>而怎么找最短路径呢？</p>
<p>【方法1】如果采用枚举算法，分别枚举出4条路径，然后比较每条路经的长度，得出最优解10，路径为A→B1→C2→D。</p>
<p>【方法2】如果我们采用分层递推的思想来做这个题目，会出现什么结果呢？设F(i)表示从点A到达点i的最短距离，则有：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">F(A)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>B</mi><mn>1</mn><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>+</mo><mn>5</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">F(B1)=min\left\{F(A)+5\right\}=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>B</mi><mn>2</mn><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>+</mo><mn>2</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">F(B2)=min\left\{F(A)+2\right\}=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>C</mi><mn>1</mn><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>B</mi><mn>1</mn><mo>)</mo><mo>+</mo><mn>3</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">F(C1)=min\left\{F(B1)+3\right\}=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>C</mi><mn>2</mn><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>B</mi><mn>1</mn><mo>)</mo><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mi>F</mi><mo>(</mo><mi>B</mi><mn>2</mn><mo>)</mo><mo>+</mo><mn>7</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">F(C2)=min\left\{F(B1)+2,F(B2)+7\right\}=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">7</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>C</mi><mn>3</mn><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>B</mi><mn>2</mn><mo>)</mo><mo>+</mo><mn>4</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">F(C3)=min\left\{F(B2)+4\right\}=6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>D</mi><mo>)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>F</mi><mo>(</mo><mi>C</mi><mn>1</mn><mo>)</mo><mo>+</mo><mn>4</mn><mo separator="true">,</mo><mi>F</mi><mo>(</mo><mi>C</mi><mn>2</mn><mo>)</mo><mo>+</mo><mn>3</mn><mo separator="true">,</mo><mi>F</mi><mo>(</mo><mi>C</mi><mn>3</mn><mo>)</mo><mo>+</mo><mn>5</mn><mo fence="true">}</mo></mrow><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">F(D)=min\left\{F(C1)+4,F(C2)+3,F(C3)+5\right\}=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span></p>
<p>所以从A到D的最短距离是10，路径为A→B1→C2→D。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[图论算法集合]]></title>
        <id>https://gaomaoqi.github.io/post/tu-lun-suan-fa-ji-he/</id>
        <link href="https://gaomaoqi.github.io/post/tu-lun-suan-fa-ji-he/">
        </link>
        <updated>2020-03-31T10:31:33.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>GMQ出品，图论算法思想，例题及代码详解</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>GMQ出品，图论算法思想，例题及代码详解</strong></p>
<!-- more -->
<h1 id="my-github-blog">My Github Blog：</h1>
<ul>
<li><a href="https://gaomaoqi.github.io/post/tu-lun-suan-fa-tuo-bu-pai-xu/">【图论算法】拓扑排序</a></li>
<li><a href="https://gaomaoqi.github.io/post/mst/">【图论算法】最小生成树（MST）</a></li>
<li><a href="https://gaomaoqi.github.io/post/tu-lun-suan-fa-zui-duan-lu-jing/">【图论算法】最短路径</a>&lt;==由于Latax公式渲染失效，请在<a href="https://www.luogu.com.cn/blog/gaomaoqi2022/post-tu-lun-suan-fa-zui-duan-lu-jing">洛谷博客</a>查看</li>
</ul>
<h1 id="my-luogu-blog">My Luogu Blog：</h1>
<ul>
<li><a href="https://www.luogu.com.cn/blog/gaomaoqi2022/post-tp">【图论算法】拓扑排序</a></li>
<li><a href="https://www.luogu.com.cn/blog/gaomaoqi2022/post-mst">【图论算法】最小生成树（MST）</a></li>
<li><a href="https://www.luogu.com.cn/blog/gaomaoqi2022/post-tu-lun-suan-fa-zui-duan-lu-jing">【图论算法】最短路径</a></li>
</ul>
<h1 id="my-uoj-blog">My UOJ Blog：</h1>
<ul>
<li><a href="http://gaomaoqi2022.blog.uoj.ac/blog/5480">【图论算法】拓扑排序</a></li>
<li><a href="http://gaomaoqi2022.blog.uoj.ac/blog/5481">【图论算法】最小生成树（MST）</a></li>
</ul>
<h2 id="持续更新中">持续更新中……</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【图论算法】最短路径]]></title>
        <id>https://gaomaoqi.github.io/post/tu-lun-suan-fa-zui-duan-lu-jing/</id>
        <link href="https://gaomaoqi.github.io/post/tu-lun-suan-fa-zui-duan-lu-jing/">
        </link>
        <updated>2020-03-31T06:14:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-最短路径的定义">一、最短路径的定义</h1>
<p>对在有权图<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo>(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">G=(V,E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>，从一个<strong>源点s</strong>到<strong>汇点t</strong>有很多条路径，其中<strong>路径上权值和最小的路径</strong>，称从s到t的最短路径。</p>
<p>简单讲：<strong>找出连接两个给定顶点权值和最小的路径。</strong></p>
<h1 id="二-最短路径问题的分类及算法">二、最短路径问题的分类及算法</h1>
<ul>
<li>
<p>SSSP：求<strong>给定起点S到其他所有点的最短路</strong>，常见算法有Dijkstra算法、Bellman_Ford算法及SPFA算法；</p>
</li>
<li>
<p>APSP：求<strong>任意两对顶点之间的最短路</strong>，常见算法有Floyd算法；</p>
</li>
</ul>
<p>这两种情况在做题时<strong>一定要分清</strong></p>
<h2 id="一floyd算法apsp">（一）Floyd算法（APSP）</h2>
<h3 id="算法概述">算法概述</h3>
<p>Floyd算法借助<strong>DP思想</strong>，可以求出<strong>每对点之间的最短距离</strong>，它对于图的要求是，可以是无向图和有向图，边权可正可负，唯一的要求是<strong>不能有负环</strong>。</p>
<h3 id="算法原理">算法原理</h3>
<p>定义 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j][k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span> 为路径中间只允许经过节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1...</mn><mi>k</mi></mrow><annotation encoding="application/x-tex">1...k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>的情况下，i到j的最短路距离。</p>
<p>它有两种情况：</p>
<ul>
<li>最短路经过点k，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>=</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>+</mo><mi>d</mi><mo>[</mo><mi>k</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j][k]=d[i][k][k-1]+d[k][j][k-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li>
<li>最短路不经过点k，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>=</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j][k]=d[i][j][k-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></li>
</ul>
<p>综合起来，状态转移方程为：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo>+</mo><mi>d</mi><mo>[</mo><mi>k</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo separator="true">,</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>]</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">d[i][j][k]=min\left\{d[i][k][k-1]+d[k][j][k-1],d[i][j][k-1] \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span></p>
<p>边界条件：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo><mo>=</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j][0]=len[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>（不存在的边权可为∞）相信大家已经看出来，我们实际上只是做了一次动态规划。<strong>由于在递推过程中k是递增的，所以我们只需要一个二维数组就可以了</strong>。</p>
<p>具体来说就是：<strong>初始<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>w</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j]=w[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>。从小到大枚举k，对每对结点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，检查更新它们的最短路值。</strong></p>
<h3 id="核心代码">核心代码</h3>
<p>非常简单<s>粗暴</s>，时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<pre><code class="language-c++">for(k=1;k&lt;=n;k++) //枚举中间点
    for(i=1;i&lt;=n;i++) //枚举起点
        for(j=1;j&lt;=n;j++) //枚举终点
            if((d[i][k]!=INF)&amp;&amp;(d[k][j]!=INF)&amp;&amp;(d[i][k]+d[k][j]&lt;d[i][j])) 
                d[i][j]=d[i][k]+d[k][j];
</code></pre>
<h3 id="该算法例题">该算法例题</h3>
<h4 id="1624-模拟试题图的直径">1624 -- 【模拟试题】图的直径</h4>
<pre><code>Description

图的直径是这样定义的：在一个带正权的图中，它的直径是指任意两点之间最短路的最大距离。注意：此图为无向图。
Input

第一行有两个正整数N,M,分别表示点数和边数(N&lt;=100,M&lt;=10000）。
接下来M行，每行三个正整数，分别表示每一条边的两个端点编号和长度。
　　
Output

输出只有一行为这个图的直径。
　　
Sample Input

3 3
1 2 1
2 3 2
1 3 2

Sample Output

2
</code></pre>
<p>这显然是APSP​，即<strong>任意两对顶点之间的最短路</strong></p>
<p>代码实现：</p>
<ol>
<li>初始化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mi>j</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">∞</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">d[i][j]=\begin{cases}0&amp;i=j\\∞&amp;i\ne j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>读入数据</li>
<li>跑一遍Floyd</li>
<li>枚举结点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>，找到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>的最大值并输出</li>
</ol>
<p>由于上面已经说的很清楚了，所以代码里面没有太多注释</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#define maxn 5003
#define yao_bu_ke_ji 0x3f3f3f3f
using namespace std;
int n,m;
int fd[maxn][maxn];

int floyed() {
	for(int mid=1; mid&lt;=n; mid++) {
		for(int i=1; i&lt;=n; i++) {
			for(int j=1; j&lt;=n; j++) {
				if(fd[i][mid]&lt;yao_bu_ke_ji-5&amp;&amp;fd[mid][j]&lt;yao_bu_ke_ji-5) {
					fd[i][j]=min(fd[i][j],fd[i][mid]+fd[mid][j]);
				}
			}
		}
	}
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1; i&lt;=n; i++) {
		for(int j=1; j&lt;=n; j++) {
			if(i==j) fd[i][j]=0;
			else fd[i][j]=yao_bu_ke_ji;
			
		}
	}
	for(int i=1; i&lt;=m; i++) {
		int x,y;
		cin&gt;&gt;x&gt;&gt;y;
		cin&gt;&gt;fd[x][y];//cin要 分开写！ 分开写！ 分开写！
		fd[y][x]=fd[x][y]; 
	}
	floyed();
	int ans=-yao_bu_ke_ji;
	for(int i=1; i&lt;=n; i++) {
		for(int j=1; j&lt;=n; j++) {
			if(fd[i][j]&lt;yao_bu_ke_ji-3) ans=max(ans,fd[i][j]);
			
		}
	}
	cout&lt;&lt;ans&lt;&lt;endl;
	return 0;
}
</code></pre>
<h3 id="选址类问题">选址类问题</h3>
<pre><code>现准备在n个居民点v1,v2,...,vn中设置一银行，问设在哪个点，可使最大服务距离最小？
若设置两个银行，问设在哪两个点?
</code></pre>
<p>假设各个居民点都有条件设置银行，并有路相连，且路长已知。实质就是<strong>求图的中心问题</strong>。</p>
<ol>
<li>
<p>设置一个银行的情况：</p>
<ol>
<li>
<p>初始化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mi>j</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">∞</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">d[i][j]=\begin{cases}0&amp;i=j\\∞&amp;i\ne j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
</li>
<li>
<p>读入数据，邻接矩阵存储；</p>
</li>
<li>
<p>用Floyd求任意两点间的最短距离<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>；</p>
</li>
<li>
<p>枚举点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，找到其它点的最短路径的最大值，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo fence="true">{</mo><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo separator="true">,</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo fence="true">}</mo></mrow><mo>(</mo><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">t[i]=max \left\{t[i],d[i][j]\right\}(1\le j\le n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo fence="true">}</mo></mrow><mo>(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">ans=min \left\{ans,t[i]\right\}(1\le i\le n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
</li>
</ol>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#define maxn 6120
#define sky 0x7fffffff/2
using namespace std;
int n,m;
int fd[maxn][maxn];
void floyed() {
   	for(int mid=1; mid&lt;=n; mid++) {
   		for(int i=1; i&lt;=n; i++) {
   			for(int j=1; j&lt;=n; j++) {
   				if(fd[i][mid]&lt;sky-3&amp;&amp;fd[mid][j]&lt;sky-3) {
   					fd[i][j]=min(fd[i][j],fd[i][mid]+fd[mid][j]);
   				}
   			}
   		}
   	}
}
int main() {
   	cin&gt;&gt;n;
   	m=n-1;
   	for(int i=1; i&lt;=n; i++) {
   		for(int j=1; j&lt;=n; j++) {
   			if(i==j) fd[i][j]=0;
   			else fd[i][j]=sky;
   		} 
   	}
   	for(int i=1; i&lt;=m; i++) {
   		int x,y;
   		cin&gt;&gt;x&gt;&gt;y;
   		cin&gt;&gt;fd[x][y];
   		fd[y][x]=fd[x][y];
   	}
   	
   	floyed();
   	int anss[maxn];
   	for(int i=1; i&lt;=n; i++) {
   		int ans=-sky;
   		for(int j=1; j&lt;=n; j++) {
   			if(fd[i][j]&lt;sky-3) ans=max(ans,fd[i][j]);
   		}
   		anss[i]=ans;
   	}
   	int reans=sky,aans;
   	for(int i=1; i&lt;=n; i++) {
   //		reans=min(anss[i],reans);
   		if(anss[i]&lt;reans) {
   			reans=anss[i];
   			aans=i;
   		}
   	}
   	cout&lt;&lt;aans;
	return 0;
}
</code></pre>
</li>
<li>
<p>设置两个银行的情况</p>
<ol>
<li>初始化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mi>j</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">∞</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">d[i][j]=\begin{cases}0&amp;i=j\\∞&amp;i\ne j\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>读入数据，邻接矩阵存储；</li>
<li>设两个银行设置在点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>,枚举<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>（居民点），求出到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>距离的最小值，再找出所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>中最大值，即为在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>设置银行的最大服务距离：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo fence="true">{</mo><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo separator="true">,</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo>(</mo><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo separator="true">,</mo><mi>d</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>[</mo><mi>k</mi><mo>]</mo><mo>)</mo><mo>(</mo><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mo>)</mo><mo fence="true">}</mo></mrow><mo>(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">t[i][j]=max \left\{t[i][j],min(d[i][k],d[j][k])(1\le k \le n)\right\}(1\le i&lt;j\le n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo fence="true">{</mo><mi>a</mi><mi>n</mi><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>[</mo><mi>j</mi><mo>]</mo><mo fence="true">}</mo></mrow><mo>(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo>≤</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">ans=min \left\{ans,t[i][j]\right\}(1\le i&lt;j\le n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></li>
</ol>
<p><s>代码走丢了</s></p>
</li>
</ol>
<h2 id="二dijkstra算法sssp">（二）Dijkstra算法（SSSP）</h2>
<h3 id="算法思想">算法思想</h3>
<p>如果图是不带负权的有向图或者无向图，我们可以用类似Prim算法的贪心思想，<strong>从起点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">v0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">0</span></span></span></span>每次新扩展一个距离最短的点，再以这个点为中间点，更新起点到其他所有点的距离</strong>。由于所有边权都为正，故不会存在一个距离更短的没被扩展过的点，所以这个点的距离永远不会再被改变，因而保证了算法的正确性。</p>
<p>算法实现时，用一维数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>s</mi><mi>t</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">vst[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>表示源点到顶点i的最短距离求出没有。用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>记录源点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">v0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">0</span></span></span></span>到顶点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的距离值。</p>
<h3 id="算法步骤">算法步骤</h3>
<ol>
<li>
<p>初始化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>v</mi><mn>0</mn><mo>]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">d[v0]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，源点到其它点的距离值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">d[i]=∞</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span>；</p>
</li>
<li>
<p>经过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>次如下步骤操作，最后得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">v0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">0</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个顶点的最短距离；</p>
<p>A. 选择一个未标记的点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>并且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>k</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>的值是最小的；</p>
<p>B. 标记点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>s</mi><mi>t</mi><mo>[</mo><mi>k</mi><mo>]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">vst[k]=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；</p>
<p>C. 以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>为中间点，修改源点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">v0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">0</span></span></span></span>到其他未标记点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>的距离值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">d[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span></p>
</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/03/31/GMDkB4.png" alt="Dij.png" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【图论算法】最小生成树（MST）]]></title>
        <id>https://gaomaoqi.github.io/post/mst/</id>
        <link href="https://gaomaoqi.github.io/post/mst/">
        </link>
        <updated>2020-03-30T15:00:23.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>GMQ出品，最小生成树（MST）概念、算法、基础例题及代码详解</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>GMQ出品，最小生成树（MST）概念、算法、基础例题及代码详解</strong></p>
<!-- more -->
<h1 id="一-生成树的定义">一、生成树的定义</h1>
<p><strong>生成树</strong>：一个|V|个点的无向连通图中，取其中|V|-1条边，并连接所有的顶点，则为原图的一棵生成树。</p>
<p><strong>树的属性</strong>：树是图的一种特殊形态。一个图G是树当且仅当以下任意一个条件成立：</p>
<ul>
<li>
<p>G有V-1条边，无圈；</p>
</li>
<li>
<p>G有V-1条边，连通；</p>
</li>
<li>
<p>任意两点只有唯一的简单路径；</p>
</li>
<li>
<p>G连通，但任意删除一条边后不连通；</p>
</li>
</ul>
<h1 id="二-最小生成树的定义">二、最小生成树的定义</h1>
<p><strong>最小生成树</strong>：在一张<strong>带权的无向连通图</strong>中，<strong>各边权和为最小的一棵生成树</strong>即为最小生成树。</p>
<p>简单讲：<u>找出连接所有点的最低成本路线</u></p>
<p>示意图：</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/03/30/GuAUEV.png" alt="GuAUEV.png" loading="lazy"></figure>
<blockquote>
<p>红边连接了所有顶点，</p>
<p>所以构成一棵生成树，</p>
<p>权和=1+2+2+4+4+7+8+9。</p>
</blockquote>
<h1 id="三-最小生成树的特性">三、最小生成树的特性</h1>
<p><strong>环属性</strong>：一棵生成树上，增加一条边e，再删除e所在环上的最大边，会得到另一棵“更好”的生成树(如果e不是最大边)</p>
<p><strong>剪切属性</strong>：在图中，剪切将顶点划分成两个不相交集合。交叉边为这些顶点在两个不同集合的边。对于任何一个剪切，各条最小的交叉边都属于某个MST，且每个MST中都包含一条最小交叉边。</p>
<p><strong>最小边原则</strong>：图中权值最小的边(如果唯一的话)一定在最小生成树上。</p>
<p><strong>唯一性</strong>：一棵生成树上，如果各边的权都不相同，则最小生成树是唯一的。反之不然。</p>
<h1 id="四-最小生成树的算法">四、最小生成树的算法</h1>
<p><strong>无向图的最小生成树（贪心思想）</strong></p>
<ul>
<li>
<p>Kruskal算法，适用于边少的图</p>
</li>
<li>
<p>Prim算法，适用于点少的图</p>
</li>
</ul>
<h2 id="kruskal算法">Kruskal算法</h2>
<h3 id="算法思想">算法思想</h3>
<p>Kruskal算法是一种<strong>贪心</strong>算法，它是<strong>将边按权值排序</strong>，每次从剩下的边集中<strong>选择权值最小且两个端点不在同一集合的边</strong>加入生成树中，反复操作，直到加入了n-1条边。</p>
<h3 id="算法步骤">算法步骤</h3>
<ol>
<li>
<p>将图G中的边按权值从小到大排序；</p>
</li>
<li>
<p>按照权值从小到大依次选边。若当前选取的边加入后使生成树T形成环，则舍弃当前边；否则标记当前边并计数；</p>
</li>
<li>
<p>重复“2”的操作，直到生成树T中包含n-1条边为止。否则当遍历完所有的边后，都不能选取n-1条边，表示最小生成树不存在。</p>
</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://s1.ax1x.com/2020/03/30/GummY6.png" alt="K算法.png" loading="lazy"></figure>
<p>算法的关键在于如何判定新加入的边会不会使图G‘产生环，在这里使用<strong>并查集</strong>，<strong>如果新加入边的两个端点在并查集的同一个集合中，说明存在环，需要舍弃这条边；否则保留当前边，并合并涉及的两个集合</strong>。用并查集优化后总的时间复杂度为O(mlogm+mα(n))</p>
<h3 id="算法核心代码">算法核心代码</h3>
<pre><code class="language-c++">bool cmp(constEdge &amp;x,constEdge &amp;y) {return x.z&lt;y.z;}
int Getfather(int x) {//查找祖先
	if(prt[x]==x)return x;
	prt[x]=Getfather(prt[x]);
   	return prt[x];
}
void kruskal() {//kruskal核心程序
	intf1,f2,k,i;k=0;
    for(i=1;i&lt;=n;i++)prt[i]=i;//初始化
    for(i=1;i&lt;=m;i++) {
		f1=Getfather(a[i].x);
		f2=Getfather(a[i].y);
		if(f1!=f2){//非环
            ans=ans+a[i].z;
            prt[f1]=f2;//合并不相同的两个集合
            k++;
            if(k==n-1) break;
        }
    }
    if(k&lt;n-1) {
        cout&lt;&lt;&quot;Impossible&quot;&lt;&lt;endl;
        bj=0;
        return;
    }
}
int main(){
	cin&gt;&gt;n&gt;&gt;m;
	ans=0;
	bj=1;
	for(inti=1;i&lt;=m;i++)cin&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].z;//结构体存储
	sort(a+1,a+m+1,cmp);
	kruskal();
	if(bj)cout&lt;&lt;ans&lt;&lt;endl;
}
</code></pre>
<h3 id="该算法例题">该算法例题</h3>
<h4 id="1452-mst练习修复公路2988">1452 -- 【MST练习】修复公路2988</h4>
<pre><code>Description

A地区在地震过后，连接所有村庄的公路都造成了损坏而无法通车。政府派人修复这些公路。
给出A地区的村庄数N，和公路数M，公路是双向的。并告诉你每条公路的连着哪两个村庄，并告诉你什么时候能修完这条公路。问最早什么时候任意两个村庄能够通车，即最早什么时候任意两条村庄都存在至少一条修复完成的道路（可以由多条公路连成一条道路）

Input

第1行两个正整数N，M（N&lt;=1000，M&lt;=100000）
下面M行，每行3个正整数x, y, t，告诉你这条公路连着x,y两个村庄，在时间t时能修复完成这条公路。（x&lt;=N，y&lt;=N，t&lt;=100000）

Output

如果全部公路修复完毕仍然存在两个村庄无法通车，则输出-1，否则输出最早什么时候任意两个村庄能够通车。

Sample Input

4 4 
1 2 6 
1 3 4 
1 4 5 
4 2 3

Sample Output

5
</code></pre>
<p>显然，这道题应该输出的是<strong>接边最大时间（即权值）</strong></p>
<p>代码如下（注意注释内容）：</p>
<pre><code class="language-c++">#include&lt;bits/stdc++.h&gt;
#define maxn 100010
using namespace std;
struct star{
	int x,y,k;
}a[maxn];
bool did(star ax,star by) {
	return ax.k&lt;by.k;
}
int fa[maxn];//并查集 
int getf(int x) {
	if(fa[x]==x) {
		return x;
	}
	else {
		fa[x]=getf(fa[x]);
		return fa[x];
	}
}
int n,m;
int main() {
    cin&gt;&gt;n&gt;&gt;m;
    for(int i=1; i&lt;=n; i++) {
    	fa[i]=i;
	}
    for(int i=1; i&lt;=m; i++) {
    	cin&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].k;//结构体存边
	}
	sort(a+1,a+m+1,did);
	int sum=0;//记录接边次数 
	int t=0;//记录接边最大时间 
	for(int i=1; i&lt;=m+1; i++) {//Kruskal算法过程
		if(i==m+1) {//无法生成
			cout&lt;&lt;&quot;-1&quot;;
			return 0;
		}
		if(sum&gt;=n-1) break;//已经生成
		if(getf(a[i].x)!=getf(a[i].y)) {//非环
			sum++;//记录接边次数
			fa[getf(a[i].x)]=getf(a[i].y);//合并
			t=max(t,a[i].k);//针对本题记录接边最大时间
		}
		if(sum&gt;=n-1) break;//已经生成
	}
	cout&lt;&lt;t&lt;&lt;endl;//输出接边最大时间
    return 0;
}
</code></pre>
<h4 id="1455-mst练习联络员">1455 -- 【MST练习】联络员</h4>
<pre><code>Description

Tyvj已经一岁了，网站也由最初的几个用户增加到了上万个用户，随着Tyvj网站的逐步壮大，管理员的数目也越来越多，现在你身为Tyvj管理层的联络员，希望你找到一些通信渠道，使得管理员两两都可以联络（直接或者是间接都可以）。Tyvj是一个公益性的网站，没有过多的利润，所以你要尽可能的使费用少才可以。
目前你已经知道，Tyvj的通信渠道分为两大类，一类是必选通信渠道，无论价格多少，你都需要把所有的都选择上；还有一类是选择性的通信渠道，你可以从中挑选一些作为最终管理员联络的通信渠道。数据保证给出的通行渠道可以让所有的管理员联通。
　　
Input

第一行n，m表示Tyvj一共有n个管理员，有m个通信渠道;
第二行到m+1行，每行四个非负整数，p,u,v,w 当p=1时，表示这个通信渠道为必选通信渠道；当p=2时，表示这个通信渠道为选择性通信渠道；u,v,w表示本条信息描述的是u，v管理员之间的通信渠道，u可以收到v的信息，v也可以收到u的信息，w表示费用。

Output

输出仅一个整数表示最小的通信费用。

Sample Input

5 6
1 1 2 1
1 2 3 1
1 3 4 1
1 4 1 1
2 2 5 10
2 2 5 5

Sample Output

9

Hint
【样例解释】
1-2-3-4-1存在四个必选渠道，形成一个环，互相可以到达。需要让所有管理员联通，需要联通2号和5号管理员，选择费用为5的渠道，所以总的费用为9。
【注意】
U,v之间可能存在多条通信渠道，你的程序应该累加所有u,v之间的必选通行渠道
【数据范围】
对于30%的数据，n&lt;=10，m&lt;=100
对于50%的数据, n&lt;=200，m&lt;=1000
对于100%的数据，n&lt;=2000，m&lt;=10000
</code></pre>
<p>这道题存在“必选通信渠道”，但我们的解决方式也简单粗暴——<strong>直接连接解决一切</strong>（但是别忘了<strong>必选通道的价格应该计入答案</strong>）</p>
<p>代码如下：</p>
<pre><code class="language-c++">#include&lt;bits/stdc++.h&gt;
#define maxn 100010
using namespace std;
struct star{
	int x,y,k;
}a[maxn];
bool did(star ax,star by) {
	return ax.k&lt;by.k;
}
int fa[maxn];//并查集 
int getf(int x) {
	if(fa[x]==x) {
		return x;
	}
	else {
		fa[x]=getf(fa[x]);
		return fa[x];
	}
	return 0x7fffffff;//这是不可能执行的（划掉
}
int n,m;
int main() {
    cin&gt;&gt;n&gt;&gt;m;
    for(int i=1; i&lt;=n; i++) {
    	fa[i]=i;
	}
	int ans=0;//记录权值和 
    for(int i=1; i&lt;=m; i++) {
    	int p,u,v,w;
    	cin&gt;&gt;p;
    	if(p==1) {//必选通道，直接连接
    		cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;
    		fa[getf(u)]=getf(v);
    		ans+=w;
		}
    	else cin&gt;&gt;a[i].x&gt;&gt;a[i].y&gt;&gt;a[i].k;
	}
	sort(a+1,a+m+1,did);
	int sum=0;//记录接边次数 
	for(int i=1; i&lt;=m; i++) {
		if(sum&gt;=n-1) break;
		if(getf(a[i].x)!=getf(a[i].y)) {
			sum++;
			fa[getf(a[i].x)]=getf(a[i].y);
			ans+=a[i].k;
		}
		if(sum&gt;=n-1) break;
	}
	cout&lt;&lt;ans&lt;&lt;endl;
    return 0;
}
</code></pre>
<h2 id="prim算法">Prim算法</h2>
<h3 id="算法步骤-2">算法步骤</h3>
<ol>
<li>将1号节点置入集合S中。</li>
<li>找到所有<strong>连接S中的节点和非S中的节点的边</strong>中的<strong>权值最小的那一条</strong>，并标记这条边，同时将<strong>连接的非S中的节点加入S集合</strong>。</li>
<li>重复“2”步骤，直到所有节点都在S中了。</li>
</ol>
<figure data-type="image" tabindex="3"><img src="https://s1.ax1x.com/2020/03/30/GuBSSS.png" alt="P算法" loading="lazy"></figure>
<p><strong>任意时刻的中间结果都是一棵树</strong>：从某一个点开始，每次都花最小的代价，用一条边加进一个新的点。</p>
<h3 id="证明过程"><s>证明过程</s></h3>
<p><s>这里啥也没有</s></p>
<h3 id="核心代码">核心代码</h3>
<p><s>这不是我的码风</s></p>
<pre><code class="language-c++">int vst[505];//vst[i]标记顶点i是否加入最小生成树中
int d[505];//d[i]表示不是生成树中点i到当前生成树中点到最小值
int g[505][505],n,m,ans=0;
void Read()//读入数据,构建图
{   
    inti,j,x,y,w;
    cin&gt;&gt;n&gt;&gt;m;
    for(i=1;i&lt;=n;i++)
        for(j=1;j&lt;=n;j++)g[i][j]=INF;
    for(i=1;i&lt;=m;i++){cin&gt;&gt;x&gt;&gt;y&gt;&gt;w;g[x][y]=g[y][x]=w;}
}
void Prim(intv0){   
    inti,j,k,minn;memset(vst,0,sizeof(vst));  //初始化生成树点集合
    for(i=1;i&lt;=n;i++)d[i]=INF;d[v0]=0;ans=0;for(i=1;i&lt;=n;i++) //选择n个点
    {   
        minn=INF;
        for(j=1;j&lt;=n;j++)//选择最小边if(vst[j]==0 &amp;&amp; minn&gt;d[j])
        {
            minn=d[j];
            k=j;
        }
        vst[k]=1;  //标记
        ans+=d[k];for(j=1;j&lt;=n;j++)   //修改d数组
            if(vst[j]==0&amp;&amp;d[j]&gt;g[k][j])d[j]=g[k][j];
    }
}
int main(){
    Read();
    Prim(1);
    cout&lt;&lt;ans&lt;&lt;endl;
}
</code></pre>
<h3 id="优化方法">优化方法</h3>
<figure data-type="image" tabindex="4"><img src="https://s1.ax1x.com/2020/03/30/GuDM38.png" alt="PY" loading="lazy"></figure>
<h3 id="该算法例题-2">该算法例题</h3>
<h4 id="1450-mst练习局域网1123">1450 -- 【MST练习】局域网1123</h4>
<pre><code>Description

某个局域网内有n(n&lt;=100)台计算机，由于搭建局域网时工作人员的疏忽，现在局域网内的连接形成了回路，我们知道如果局域网形成回路那么数据将不停的在回路内传输，造成网络卡的现象。因为连接计算机的网线本身不同，所以有一些连线不是很畅通，我们用f(i,j)表示i,j之间连接的畅通程度(f(i,j)&lt;=1000)，f(i,j)值越小表示i,j之间连接越通畅，f(i,j)为0表示i,j之间无网线连接。现在我们需要解决回路问题，我们将除去一些连线，使得网络中没有回路，并且被除去网线的Σf(i,j)最大，请求出这个最大值。

Input

第一行两个正整数n和k；
接下来的k行每行三个正整数i j m，表示i,j两台计算机之间有网线联通，通畅程度为m。

Output

输出仅一个正整数，Σf(i,j)的最大值

Sample Input

5 5
1 2 8
1 3 1
1 5 3
2 4 5
3 4 2

Sample Output

8
</code></pre>
<p>废话少说，上代码：</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#define maxn 5010
#define yao_bu_ke_ji 0x3f3f3f3f//其实就是inf啦~~
using namespace std;
bool join[maxn];
int d[maxn];
int am[maxn][maxn];//邻接矩阵
int n,m;
int prim() {
	int minn=yao_bu_ke_ji;
	for(int i=1; i&lt;=n; i++) {
		d[i]=yao_bu_ke_ji;
	}
	d[1]=0;
	int ans=0,jo;
	for(int i=1; i&lt;=n; i++) {
		minn=yao_bu_ke_ji;
		for(int j=1; j&lt;=n; j++) { 
			if(join[j]==0) {//未加入集合
				if(d[j]&lt;minn) {//边权小
					minn=d[j];//更新
					jo=j;
				}
			}
		}
		join[jo]=1;//标记
		ans+=d[jo];
		for(int j=1; j&lt;=n; j++) {
			if(join[j]==0) {
				d[j]=min(am[jo][j],d[j]);//更新d[]
			}
		}
	}
	return ans;
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1; i&lt;=n; i++) {
		for(int j=1; j&lt;=n; j++) {
			am[i][j]=yao_bu_ke_ji;//初始化为inf
		}
	}
	int sum=0;//记录总权值
	for(int i=1; i&lt;=m; i++) {
		int x,y,k;
		cin&gt;&gt;x&gt;&gt;y&gt;&gt;k;
		am[x][y]=k;
		am[y][x]=k;
		sum+=k;
	}
	cout&lt;&lt;sum-prim();//总权值减去保留权值得到答案
	return 0;
}
</code></pre>
<h4 id="1451-mst练习繁忙的都市scoi20051406">1451 -- 【MST练习】繁忙的都市（SCOI2005）1406</h4>
<pre><code>Description

城市C是一个非常繁忙的大都市，城市中的道路十分的拥挤，于是市长决定对其中的道路进行改造。城市C的道路是这样分布的：城市中有n个交叉路口，有些交叉路口之间有道路相连，两个交叉路口之间最多有一条道路相连接。这些道路是双向的，且把所有的交叉路口直接或间接的连接起来了。每条道路都有一个分值，分值越小表示这个道路越繁忙，越需要进行改造。但是市政府的资金有限，市长希望进行改造的道路越少越好，于是他提出下面的要求：
1．改造的那些道路能够把所有的交叉路口直接或间接的连通起来。
2．在满足要求1的情况下，改造的道路尽量少。
3．在满足要求1、2的情况下，改造的那些道路中分值最大的道路分值尽量小。
任务：作为市规划局的你，应当作出最佳的决策，选择那些道路应当被修建。

Input

第一行有两个整数n,m表示城市有n个交叉路口，m条道路。
接下来m行是对每条道路的描述，u, v, c表示交叉路口u和v之间有道路相连，分值为c。(1≤n≤300，1≤c≤10000，1≤m≤8000)

Output

输出两个整数s, max，表示你选出了几条道路，分值最大的那条道路的分值是多少。

Sample Input

4 5
1 2 3
1 4 5
2 4 7
2 3 6
3 4 8

Sample Output

3 6
</code></pre>
<p>代码来咯（注释请参考上一题）：</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#define maxn 5010
#define yao_bu_ke_ji 0x3f3f3f3f
using namespace std;
bool join[maxn];
int d[maxn];
int am[maxn][maxn];//邻接矩阵
int n,m;
int anm,anss;
int prim() {
	int minn=yao_bu_ke_ji;
	for(int i=1; i&lt;=n; i++) {
		d[i]=yao_bu_ke_ji;
	}
	d[1]=0;
	int ans=0,jo;
	for(int i=1; i&lt;=n; i++) {
		minn=yao_bu_ke_ji;
		for(int j=1; j&lt;=n; j++) {
			if(join[j]==0) {
				if(d[j]&lt;minn) {
					minn=d[j];
					jo=j;
				}
			}
		}
		anm=max(anm,d[jo]);
		anss++;
		join[jo]=1;
		ans+=d[jo];
		for(int j=1; j&lt;=n; j++) {
			if(join[j]==0) {
				d[j]=min(am[jo][j],d[j]);
			}
		}
	}
	return ans;
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1; i&lt;=n; i++) {
		for(int j=1; j&lt;=n; j++) {
			am[i][j]=yao_bu_ke_ji;
		}
	}
	for(int i=1; i&lt;=m; i++) {
		int x,y,k;
		cin&gt;&gt;x&gt;&gt;y&gt;&gt;k;
		am[x][y]=k;
		am[y][x]=k;
	}
	int did=prim();
	cout&lt;&lt;anss-1&lt;&lt;&quot; &quot;&lt;&lt;anm;
	return 0;
}
</code></pre>
<p>图片来源：Did's 课件<br>
题目来源：Did及Xinyue<br>
代码：GMQ原创出品<br>
代码详解/注释：GMQ原创出品<br>
有转载需求请私信：gao.maoqi.2007@foxmail.com</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【图论算法】拓扑排序]]></title>
        <id>https://gaomaoqi.github.io/post/tu-lun-suan-fa-tuo-bu-pai-xu/</id>
        <link href="https://gaomaoqi.github.io/post/tu-lun-suan-fa-tuo-bu-pai-xu/">
        </link>
        <updated>2020-03-24T03:01:06.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>GMQ出品，拓扑排序的概念、堆优化、基础例题及代码详解</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>GMQ出品，拓扑排序的概念、堆优化、基础例题及代码详解</strong></p>
<!-- more -->
<h1 id="一-什么是拓扑排序">一、什么是拓扑排序</h1>
<p>在图论中，<strong>拓扑排序</strong>（Topological Sorting）是一个<strong>有向无环图</strong>（DAG, Directed Acyclic Graph）的<strong>所有顶点</strong>的<strong>线性序列</strong>。且该序列必须满足下面两个条件：</p>
<ul>
<li>每个顶点<strong>出现且只出现一次</strong>。</li>
<li>若<strong>存在</strong>一条<strong>从顶点A到顶点B的路径</strong>，那么在序列中<strong>顶点A出现在顶点B的前面</strong>。</li>
</ul>
<p>有向无环图（DAG）才有拓扑排序，非DAG图没有拓扑排序一说。</p>
<p>例如，下面这个图：</p>
<figure data-type="image" tabindex="1"><img src="https://upload-images.jianshu.io/upload_images/3076982-bee44a555fc11686.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/335/format/webp" alt="来自网络" loading="lazy"></figure>
<p>对于本图而言:它是一个DAG图，那么如何写出它的拓扑排序呢？</p>
<p>一种比较常用的方法：</p>
<ol>
<li>
<p>从DAG图中选择一个没有前驱（即入度为0）的顶点并输出。</p>
</li>
<li>
<p>从图中删除该顶点和所有以它为起点的有向边。</p>
</li>
<li>
<p>重复1和2直到当前的DAG<strong>图为空</strong>或<strong>当前图中不存在无前驱的顶点为止</strong>。后一种情况说明有向图中必然存在环。</p>
</li>
</ol>
<p>经过如下操作后：</p>
<figure data-type="image" tabindex="2"><img src="https://upload-images.jianshu.io/upload_images/3076982-7fc27abb0260909e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/544/format/webp" alt="来自网络" loading="lazy"></figure>
<p>得到拓扑排序后的结果是{1,2, 4, 3, 5}。<br>
通常，一个有向无环图可以有<strong>一个或多个</strong>拓扑排序序列。</p>
<hr>
<p>再来一个例子：</p>
<figure data-type="image" tabindex="3"><img src="https://bkimg.cdn.bcebos.com/pic/9345d688d43f87940e886390da1b0ef41bd53a1c?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2U5Mg==,xp_5,yp_5" alt="来自百度百科" loading="lazy"></figure>
<hr>
<h1 id="二-例题">二、例题</h1>
<h2 id="模板题1462-拓扑排序拓扑排序">模板题：1462 -- 【拓扑排序】拓扑排序</h2>
<pre><code>[问题描述]
给你一个图，要求你求出拓扑序列。

[输入格式]
第1行为2个空格分开的整数n(2&lt;=n&lt;=200)和m(10&lt;=m&lt;=20000)，分别表示图的顶点数和边数。
第2...m+1行，每行2个空格分开的整数i, j, i表示一条边的起点，j表示终点。

[输出格式]
拓扑序，顶点从1开始编号，若有多个拓扑序，则顶点编号小的优先输出。
若有环，则输出&quot;no solution&quot;。

[样例输入]
22
12
21

[样例输出]
no solution
</code></pre>
<p>代码如下（按照最小字典序输出）复杂度为O(N<sup>2</sup>)：</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
using namespace std;
int n,m;
int rd[410],ans[410];
bool mapp[410][410];
int tp() {
	for(int i=1; i&lt;=n; i++) {
		int k;
		for(k=1; k&lt;=n+1; k++) {//寻找入度为0的点
			if(rd[k]==0) {
				break;
			}
		}
		if(k&gt;n) return 0;//环!
		ans[++ans[0]]=k;//按照最小字典序记录拓扑序列
		rd[k]=-1;//标记入度为-1（注：千万不能标记为0）
		for(int j=1; j&lt;=n; j++) {
			if(mapp[k][j]==1) rd[j]--;//删除连边
		}
	}
	return 1;
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1; i&lt;=m; i++) {
		int x,y;
		cin&gt;&gt;x&gt;&gt;y;
		rd[y]++;//统计入度
		mapp[x][y]=1;//邻接矩阵存储
	}
	if(tp()) {//无环
		for(int i=1; i&lt;=ans[0]; i++) {
			cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;
		}
		return 0;
	}
	cout&lt;&lt;&quot;no solution&quot;&lt;&lt;endl;//有环
	return 0;
}
</code></pre>
<hr>
<h2 id="变形题1464-拓扑排序被遗忘的时光">变形题：1464 -- 【拓扑排序】被遗忘的时光</h2>
<pre><code>[问题描述]
Lost-Monkey赢了精灵，精灵告诉Lost-Monkey，神庙里被恶魔封印了一个名为Lostangle的天使，如果想把它释放出来，需要将 n 个时间点排序，而精灵只知道 m 条形如 a 在 b 前的信息。
Lost-Monkey一听到有天使，很想见见天使到底长什么样，可惜时间点太多，他觉得这几乎是不可能的任务，好在身为在他旁边的XXX，你，传说中的impossible is nothing，一定知道如何解决啦！！

[输入格式]
第一行n，m；
接下来m行，每行2个数a，b；意义均同上。

[输出格式]
输出文件仅一行，若可以将n个时间点排序，则输出字典序最小的一种方案，否则输出“NO SOLUTION”。

[样例输入]
3 2
1 2
2 3

[样例输出]
1 2 3

[数据范围]
40%的数据,n&lt;=1000，m&lt;=1000
100%的数据,n&lt;=100000，m&lt;=500000
</code></pre>
<p>这道题结点数n&lt;=100000</p>
<p>若为了保证字典序最小，按照上一道题的邻接矩阵实现方法时间复杂度为O(N<sup>2</sup>)，必然TLE</p>
<p>可以改进入度为0的点的汇总方式，不跑循环，而是在断边时判断并存储</p>
<p>但如果只用数组存储，虽然复杂度降到了O(n+e)，但是不能按照字典序</p>
<p>这是因为取出入度为0的点时是直接取数组头（否则也得不到优化复杂度的目的），而数组头不一定字典序最小</p>
<p>而什么容器可以维护字典序呢？</p>
<p>我听见你在说：“<s>set！</s> 优先队列！！！”</p>
<p>这是因为：</p>
<blockquote>
<p>较之于队列，优先队列的不同在于它<strong>每一次取值取的是队列中的最大（小）值</strong></p>
</blockquote>
<p>那么，我们可以用小根堆维护一个优先队列（<s>STL万岁</s>！）</p>
<p>这样可以在O(1)的复杂度内找到字典序最小的入度为0的点</p>
<p>代码如下（按照最小字典序输出）复杂度为O(n+e)：</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
#include&lt;queue&gt;
#define maxn 500010
using namespace std;
priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;hp;//STL小根堆
int n,m;
int rd[maxn],ans[maxn];
struct star{
	int next,to;
}a[maxn];
int h[maxn],top;
void add(int x,int y) {
	a[++top].to=y;
	a[top].next=h[x];
	h[x]=top;
    return;
}
int tp() {
	for(int i=1; i&lt;=n; i++) {
		if(rd[i]==0) hp.push(i);//入堆
	}
	while(!hp.empty()) {//堆非空
		int x=hp.top();
		hp.pop();//取出堆顶
		ans[++ans[0]]=x;
		for(int i=h[x]; i; i=a[i].next) {
			int y=a[i].to;
			rd[y]--;
			if(rd[y]==0) hp.push(y);//入度为0的点入堆
		}
	}
	if(ans[0]!=n) return 0;//有入度为0的点未取出，即有环
	return 1;
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1; i&lt;=m; i++) {
		int x,y;
		cin&gt;&gt;x&gt;&gt;y;
		add(x,y);//前向星存储
		rd[y]++;//统计入度
	}
	if(tp()) {//无环
		for(int i=1; i&lt;=ans[0]; i++) {
			cout&lt;&lt;ans[i]&lt;&lt;&quot; &quot;;
		}
		return 0;
	}
	cout&lt;&lt;&quot;NO SOLUTION&quot;&lt;&lt;endl;//有环
	return 0;
}
</code></pre>
<hr>
<h2 id="变形题1465-拓扑排序奖金">变形题：1465 -- 【拓扑排序】奖金</h2>
<pre><code>[问题描述]
由于无敌的凡凡在2005年世界英俊帅气男总决选中胜出，Yali Company总经理Mr.Z心情好，决定给每位员工发奖金。公司决定以每个人本年在公司的贡献为标准来计算他们得到奖金的多少。
于是Mr.Z下令召开m方会谈。每位参加会谈的代表提出了自己的意见：“我认为员工a的奖金应该比b高！”Mr.Z决定要找出一种奖金方案，满足各位代表的意见，且同时使得总奖金数最少。每位员工奖金最少为100元。
　　
[文件输入]
第一行两个整数n,m，表示员工总数和代表数；
以下m行，每行2个整数a,b，表示某个代表认为第a号员工奖金应该比第b号员工高。

[文件输出]
若无法找到合理方案，则输出“Poor Xed”；否则输出一个数表示最少总奖金。

[样例输入]
2 1
1 2

[样例输出]
201

[数据规模]
80％的数据满足n&lt;=1000，m&lt;=2000；
100％的数据满足n&lt;=10000，m&lt;=20000。
</code></pre>
<p>首先构图，若存在条件&quot;a的钱比b多&quot;则从b引-条有向指向a；然后拓扑排序，若无法完成排序则表示问题无解(存在圈)；若可以得到完整的拓扑序列，则按序列顺序进行递推：</p>
<p>设 f[i] 表示第i个人能拿的最少奖金数；</p>
<p>首先所有f[i] =100(题目中给定的最小值)；</p>
<p>然后按照拓扑顺序考察每个点i，若存在有向边(j,i),则表示们必须比f[j]大，因此我们令f[i] = Max { f[i]，f[j]+1 }即可；</p>
<p>递推完成之后所有f[i]的值也就确定了，而答案就等于f[1]+... +f[n]。</p>
<p>代码如下（按照最小字典序输出）复杂度为O(n*e)：</p>
<pre><code class="language-c++">#include&lt;iostream&gt;
#include&lt;cstdio&gt;
#include&lt;cstring&gt;
#include&lt;queue&gt;
#define maxn 500010
using namespace std;
priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;hp;//STL小根堆
int n,m;
int rd[maxn],ans[maxn];
struct star{
	int next,to;
}a[maxn];
int h[maxn],top;
void add(int x,int y) {
	a[++top].to=y;
	a[top].next=h[x];
	h[x]=top;
    return;
}
int tp() {
	for(int i=1; i&lt;=n; i++) {
		if(rd[i]==0) hp.push(i);//入堆
	}
	int topp=0;
	while(!hp.empty()) {//堆非空
		int x=hp.top();
		hp.pop();//取出堆顶
		topp++;
		for(int i=h[x]; i; i=a[i].next) {
			int y=a[i].to;
			rd[y]--;
			ans[y]=max(ans[y],ans[x]+1);
			if(rd[y]==0) {
				hp.push(y);//入度为0的点入堆
			}
		}
	}
	if(topp!=n) return 0;//有入度为0的点未取出，即有环
	return 1;
}
int main() {
	cin&gt;&gt;n&gt;&gt;m;
    for(int i=1; i&lt;=n; i++) {
        ans[i]=100;
	}
	for(int i=1; i&lt;=m; i++) {
		int x,y;
		cin&gt;&gt;x&gt;&gt;y;
		add(y,x);//前向星存储
		rd[x]++;//统计入度
	}
	if(tp()) {//无环
		int sum=0;
		for(int i=1; i&lt;=n; i++) {
			sum+=ans[i];
		}
		cout&lt;&lt;sum;
		return 0;
	}
	cout&lt;&lt;&quot;Poor Xed&quot;&lt;&lt;endl;//有环
	return 0;
}
</code></pre>
<p>拓扑排序概念内容引自简书<br>
图片来源：简书、百度百科<br>
题目来源：Did及Xinyue<br>
代码：GMQ原创出品<br>
代码与堆优化详解：GMQ原创出品<br>
有转载需求请私信：gao.maoqi.2007@foxmail.com</p>
]]></content>
    </entry>
</feed>